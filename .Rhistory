}else{
x <- data.frame(x)$meetingTime$buildingDescription
}
vector.of.buildings<-c(vector.of.buildings, x)
}
vector.of.buildings <- c()
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
}
vector.of.buildings<-c(vector.of.buildings, x)
}
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
print(x)
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
x <- x[1]
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
print(vector.of.buildings)
vector.of.buildings <- c()
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
x <- x[1]
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
full.df.clean <- bind_cols(full.df, as.vector(vector.of.buildings))
full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL)%>%
write_csv(file="parsed_data.csv")
colnames(full.df.clean)
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
full.df <- fromJSON("Database/199901.json",
simplifyDataFrame = T)
full.df <- full.df$data
facVec <- full.df$faculty
testdf <- data.frame(facVec[1])
tempVec <- c()
for(x in facVec){
if(length(x)!=0){
tempVec <- c(as.character(data.frame(x)["displayName"]), tempVec)
}
else{
tempVec <- c(NA, tempVec)
}
}
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
head(full.df.clean)
full.df.clean <- full.df.clean%>%
mutate(...35 = names)
?mutate
full.df.clean <- full.df.clean%>%
mutate(names = ...35)
print(full.df.clean$names[1])
for(x in facVec){
if(length(x)!=0){
tempVec <- c(tempVec, as.character(data.frame(x)["displayName"]))
}
else{
tempVec <- c(tempVec, NA)
}
}
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
tempVec <- c()
for(x in facVec){
if(length(x)!=0){
tempVec <- c(tempVec, as.character(data.frame(x)["displayName"]))
}
else{
tempVec <- c(tempVec, NA)
}
}
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
full.df.clean <- full.df.clean%>%
mutate(names = ...35)
full.df.clean$names[1]
buildings <- full.df.clean$meetingsFaculty
testdf$meetingTime["buildingDescription"]
vector.of.buildings <- c()
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
x <- x[1]
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
full.df.clean <- bind_cols(full.df, as.vector(vector.of.buildings))
full.df.clean <- full.df.clean%>%
mutate(buildingName = ...35)
full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL)%>%
write_csv(file="parsed_data.csv")
read_csv("parsed_data.csv")
colnames(read_csv("parsed_data.csv"))
full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL,
...35 = NULL)%>%
write_csv(file="parsed_data.csv")
colnames(read_csv("parsed_data.csv"))
read_csv("parsed_data.csv")$buildingName
read_csv("parsed_data.csv")$names
full.df <- fromJSON("Database/199901.json",
simplifyDataFrame = T)
full.df <- full.df$data
full.df <- NULL
full.df <- fromJSON("Database/199901.json",
simplifyDataFrame = T)
full.df <- full.df$data
facVec <- full.df$faculty
testdf <- data.frame(facVec[1])
tempVec <- c()
for(x in facVec){
if(length(x)!=0){
tempVec <- c(tempVec, as.character(data.frame(x)["displayName"]))
}
else{
tempVec <- c(tempVec, NA)
}
}
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
full.df.clean <- full.df.clean%>%
mutate(names = ...35)
colnames(full.df.clean)
buildings <- full.df.clean$meetingsFaculty
testdf$meetingTime["buildingDescription"]
vector.of.buildings <- c()
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
x <- x[1]
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
full.df.clean <- bind_cols(full.df, as.vector(vector.of.buildings))
full.df.clean <- full.df.clean%>%
mutate(buildingName = ...35)
full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL,
...35 = NULL)%>%
write_csv(file="parsed_data.csv")
read_csv("parsed_data.csv")$names
colnames(full.df.clean)
full.df <- fromJSON("Database/199901.json",
simplifyDataFrame = T)
full.df <- full.df$data
facVec <- full.df$faculty
testdf <- data.frame(facVec[1])
tempVec <- c()
for(x in facVec){
if(length(x)!=0){
tempVec <- c(tempVec, as.character(data.frame(x)["displayName"]))
}
else{
tempVec <- c(tempVec, NA)
}
}
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
full.df.clean <- full.df.clean%>%
mutate(names = ...35)
colnames(full.df.clean)
buildings <- full.df.clean$meetingsFaculty
testdf$meetingTime["buildingDescription"]
vector.of.buildings <- c()
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
x <- x[1]
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
full.df.clean <- bind_cols(full.df.clean, as.vector(vector.of.buildings))
colnames(full.df.clean)
full.df.clean <- full.df.clean%>%
mutate(buildingName = ...37)
full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL,
...35 = NULL,
...37 = NULL)%>%
write_csv(file="parsed_data.csv")
colnames(full.df.clean)
read_csv("parsed_data.csv")$names
full.df <- NULL
for(json in list.files("Database")){
parse <- fromJSON(paste("Database/",json,sep=""),
simplifyDataFrame = T)
full.df <- bind_rows(full.df, parse$data)
}
full.df <- fromJSON("Database/199901.json",
simplifyDataFrame = T)
full.df <- full.df$data
facVec <- full.df$faculty
testdf <- data.frame(facVec[1])
tempVec <- c()
for(x in facVec){
if(length(x)!=0){
tempVec <- c(tempVec, as.character(data.frame(x)["displayName"]))
}
else{
tempVec <- c(tempVec, NA)
}
}
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
full.df.clean <- full.df.clean%>%
mutate(names = ...35)
buildings <- full.df.clean$meetingsFaculty
testdf$meetingTime["buildingDescription"]
vector.of.buildings <- c()
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
x <- x[1]
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
full.df.clean <- bind_cols(full.df.clean, as.vector(vector.of.buildings))
full.df.clean <- full.df.clean%>%
mutate(buildingName = ...37)
full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL,
...35 = NULL,
...37 = NULL)%>%
write_csv(file="parsed_data.csv")
new.df <- read_csv("parsed_data.csv")
table(new.df$names)
prop.table(new.df$names)
colnames(new.df)
new.df %>%
group_by(subject, names)%>%
count(names)%>%
mutate(Prop = prop.table(n))%>%
summarize(
propMax = max(Prop)
)
new.df %>%
group_by(subject, names)%>%
count(names)%>%
mutate(Prop = prop.table(n))%>%
summarize(
propMax = max(Prop)
)%>%
print(max())
new.df %>%
group_by(subject, names)%>%
count(names)%>%
mutate(Prop = prop.table(n))%>%
summarize(
propMax = max(Prop)
)
new.df %>%
group_by(subject, names)%>%
count(names)%>%
mutate(Prop = prop.table(n))%>%
summarize(
propMax = max(Prop)
)%>%
view()
for(json in list.files("Database")){
parse <- fromJSON(paste("Database/",json,sep=""),
simplifyDataFrame = T)
full.df <- bind_rows(full.df, parse$data)
}
full.df <- full.df$data
facVec <- full.df$faculty
testdf <- data.frame(facVec[1])
tempVec <- c()
for(x in facVec){
if(length(x)!=0){
tempVec <- c(tempVec, as.character(data.frame(x)["displayName"]))
}
else{
tempVec <- c(tempVec, NA)
}
}
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
full.df.clean <- full.df.clean%>%
mutate(names = ...35)
buildings <- full.df.clean$meetingsFaculty
testdf$meetingTime["buildingDescription"]
vector.of.buildings <- c()
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
x <- x[1]
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
full.df.clean <- bind_cols(full.df.clean, as.vector(vector.of.buildings))
full.df.clean <- full.df.clean%>%
mutate(buildingName = ...37)
full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL,
...35 = NULL,
...37 = NULL)%>%
write_csv(file="parsed_data.csv")
new.df <- read_csv("parsed_data.csv")
for(json in list.files("Database")){
parse <- fromJSON(paste("Database/",json,sep=""),
simplifyDataFrame = T)
full.df <- bind_rows(full.df, parse$data)
}
full.df <- full.df$data
full.df <- full.df$data
library(tidyverse)
library(jsonlite)
full.df <- NULL
for(json in list.files("Database")){
parse <- fromJSON(paste("Database/",json,sep=""),
simplifyDataFrame = T)
full.df <- bind_rows(full.df, parse$data)
}
full.df.pick <- full.df$data
facVec <- full.df$faculty
testdf <- data.frame(facVec[1])
tempVec <- c()
for(x in facVec){
if(length(x)!=0){
tempVec <- c(tempVec, as.character(data.frame(x)["displayName"]))
}
else{
tempVec <- c(tempVec, NA)
}
}
full.df.clean <- bind_cols(full.df, as.vector(tempVec))
full.df.clean <- full.df.clean%>%
mutate(names = ...35)
buildings <- full.df.clean$meetingsFaculty
testdf$meetingTime["buildingDescription"]
buildings <- full.df.clean$meetingsFaculty
vector.of.buildings <- c()
for(x in buildings){
if(is.null(data.frame(x)$meetingTime$buildingDescription)){
x <- NA
}else{
x <- data.frame(x)$meetingTime$buildingDescription
if(length(x)>1){
x <- x[1]
}
}
vector.of.buildings<-c(vector.of.buildings, x)
}
full.df.clean <- bind_cols(full.df.clean, as.vector(vector.of.buildings))
full.df.clean <- full.df.clean%>%
mutate(buildingName = ...37)
full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL,
...35 = NULL,
...37 = NULL)%>%
write_csv(file="parsed_data.csv")
new.df <- read_csv("parsed_data.csv")
full.df.clean <- full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL,
...35 = NULL,
...37 = NULL)
write_csv(full.df.clean, "parsed_data.csv")
full.df.clean[31]
colnames(full.df.clean[31])
full.df.clean.final <- full.df.clean %>% mutate(faculty = NULL,
meetingsFaculty = NULL,
...35 = NULL,
...37 = NULL,
reservedSeatSummary=NULL)
write_csv(full.df.clean.final, "parsed_data.csv")
view(full.df.clean.final)
library(tidyverse)
dat <- read_csv("parsed_data.csv")
spec(dat)
dat %>%
group_by(subject, names)%>%
count(names)%>%
mutate(Prop = prop.table(n))
dat <- read_csv("parsed_data.csv")
dat %>%
group_by(subject, names)%>%
count(names)%>%
mutate(Prop = prop.table(n))
counting <- dat %>%
group_by(subject, names)%>%
count(names)%>%
mutate(Prop = prop.table(n))
max(counting$Prop)
View(counting)
dat%>%
count(names)
dat%>%
count(names)%>%
print(max)
dat%>%
count(names)%>%
print(max())
dat%>%
count(names)%>%
print(max())
dat%>%
count(names)%>%
summarise(
max = max(n)
)
dat%>%
count(names)
counting <- dat%>%
count(names)
print(counting$n)
print(max(counting$n))
dat$names
dat %>%
filter(!is.na(names))
dat %>%
filter(!is.na(names))%>%
mode(names)
dat %>%
filter(!is.na(names))%>%
Mode(names)
library(DescTools)
dat %>%
filter(!is.na(names))%>%
Mode(names)
table(dat$names)
which.max(table(dat$names))
print(dat[which(dat$names="Tierney, Ann Jane")])
print(dat[which(dat$names=="Tierney, Ann Jane")])
print(dat[which(dat$names=="Tierney, Ann Jane"),])
view(dat[which(dat$names=="Tierney, Ann Jane"),])
dat %>% group_by(names)%>%
summarise(
numOfClasses = n()
)
dat %>% group_by(names)%>%
summarise(
numOfClasses = n()
)%>%
arrange()
dat %>% group_by(names)%>%
summarise(
numOfClasses = n()
)%>%
arrange(numOfClasses)
counting <- dat %>% group_by(names)%>%
summarise(
numOfClasses = n()
)%>%
arrange(numOfClasses)
counting$numOfClasses[-1]
counting$numOfClasses[2]
counting[, nrow(counting)]
counting[nrow(counting),]
counting <- dat %>% group_by(names)%>%
summarise(
numOfClasses = n()
)%>%
filter(!is.na(names))%>%
arrange(numOfClasses)
counting[nrow(counting),]
for(x in 0:10){
counting[nrow(counting)-x,]
}
for(x in 0:10){
print(counting[nrow(counting)-x,])
}
view(dat[which(dat$names=="Yoshino, Jun")])
view(dat[which(dat$names=="Yoshino, Jun"),])
view(dat[which(dat$names=="Peck, William"),])
for(x in 0:10){
print(counting[nrow(counting)-x,])
}
view(dat[which(dat$names=="Selleck, Bruce "),])
view(dat[which(dat$names=="Selleck, Bruce "),])
view(dat[which(dat$names=="Selleck, Bruce"),])
view(dat[which(dat$names=="Banner-Haley, Charles"),])
view(dat[which(dat$names=="Fourquet, Elodie"),])
